// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  username  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bio       String?
  avatar    String?
  location  String?
  role      Role     @default(USER)
  signature String?  // Added for vBulletin/phpBB style
  postCount Int      @default(0)  // Added to track post count
  joinDate  DateTime @default(now())
  isActive  Boolean  @default(true)  // For banning users
  lastLogin DateTime?  // Track last login
  ipAddress String?  // Track IP for admin purposes

  threads         Thread[]
  posts           Post[]
  sentMessages    Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  notifications   Notification[]
}

enum Role {
  USER
  MODERATOR
  ADMIN
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String?  // Added description for category
  order       Int      @default(0)  // For ordering categories
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  subjects    Subject[]
}

model Subject {
  id          Int      @id @default(autoincrement())
  name        String
  description String?  // Added description for subject
  icon        String?  // For subject icon
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  threads     Thread[]
  threadCount Int      @default(0)  // Counter for threads
  postCount   Int      @default(0)  // Counter for posts
  lastPost    DateTime?  // Track last post time
  lastPostUserId Int?  // Track last poster
}

model Thread {
  id          Int      @id @default(autoincrement())
  title       String
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  subjectId   Int
  subject     Subject  @relation(fields: [subjectId], references: [id])
  posts       Post[]
  locked      Boolean  @default(false)
  sticky      Boolean  @default(false)  // For pinned threads
  viewCount   Int      @default(0)  // Track view count
  lastPostAt  DateTime @default(now())  // Track last post time
  lastPostUserId Int?  // Track last poster
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  threadId  Int
  user      User     @relation(fields: [userId], references: [id])
  thread    Thread   @relation(fields: [threadId], references: [id])
  replyToId Int?
  replyTo   Post?    @relation("ReplyTo", fields: [replyToId], references: [id])
  replies   Post[]   @relation("ReplyTo")
}

model Message {
  id          Int      @id @default(autoincrement())
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  senderId    Int
  recipientId Int
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  recipient   User     @relation("ReceivedMessages", fields: [recipientId], references: [id])
}

model Notification {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  read      Boolean  @default(false)
}

model SiteSettings {
  id          Int      @id @default(autoincrement())
  key         String   @unique
  value       String?
  type        String   @default("string")
  category    String   @default("general")
  description String?
  isInstalled Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ThemeSettings {
  id                         Int      @id @default(autoincrement())
  siteName                   String   @default("NextJS Forum")
  logoUrl                    String?
  faviconUrl                 String?  @default("/favicon.ico")
  siteDescription            String?  @default("A modern forum built with Next.js")
  footerText                 String?  @default("Powered by NextJS Forum")

  // Colors
  primaryColor               String   @default("#2B4F81")
  secondaryColor             String   @default("#4C76B2")
  backgroundColor            String   @default("#E0E8F5")
  textColor                  String   @default("#000000")
  linkColor                  String   @default("#006699")
  linkHoverColor             String   @default("#0088CC")

  // Header & Navigation
  headerBackground           String   @default("#2B4F81")
  headerText                 String   @default("#FFFFFF")
  navbarBackground           String   @default("#4C76B2")
  navbarText                 String   @default("#FFFFFF")

  // Forum Elements
  categoryHeaderBackground   String   @default("#738FBF")
  categoryHeaderText         String   @default("#FFFFFF")
  subjectHeaderBackground    String   @default("#DEE4F2")
  subjectHeaderText          String   @default("#000000")
  threadBackground           String   @default("#FFFFFF")
  threadAltBackground        String   @default("#F5F5FF")
  threadHoverBackground      String   @default("#E8EFFD")
  postHeaderBackground       String   @default("#DEE4F2")
  postBodyBackground         String   @default("#FFFFFF")
  postFooterBackground       String   @default("#F5F5FF")
  sidebarBackground          String   @default("#E0E8F5")
  borderColor                String   @default("#94A3C4")

  // Buttons & Forms
  buttonBackground           String   @default("#4C76B2")
  buttonText                 String   @default("#FFFFFF")
  buttonHoverBackground      String   @default("#0088CC")
  inputBackground            String   @default("#FFFFFF")
  inputText                  String   @default("#000000")
  inputBorderColor           String   @default("#94A3C4")

  // Layout
  buttonRadius               String   @default("0px")
  cardRadius                 String   @default("0px")
  fontSize                   String   @default("13px")
  fontFamily                 String   @default("Verdana, Arial, sans-serif")

  // Features
  enableDarkMode             Boolean  @default(false)
  compactMode                Boolean  @default(false)
  showAvatars                Boolean  @default(true)
  showSignatures             Boolean  @default(true)
  threadsPerPage             Int      @default(20)
  postsPerPage               Int      @default(10)

  // Custom
  customCSS                  String?

  isActive                   Boolean  @default(true)
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
}

model InstallationStatus {
  id               Int       @id @default(autoincrement())
  isInstalled      Boolean   @default(false)
  installationStep Int       @default(0)
  dbConfigured     Boolean   @default(false)
  adminCreated     Boolean   @default(false)
  siteConfigured   Boolean   @default(false)
  forumsCreated    Boolean   @default(false)
  installationDate DateTime?
  version          String    @default("1.0.0")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}
